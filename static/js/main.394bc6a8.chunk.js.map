{"version":3,"sources":["App.tsx","index.tsx"],"names":["GoodsFromServer","App","useState","activeSort","setActiveSort","isReversed","setIsReversed","visibleGoods","goods","options","preparedGoods","sort","a","b","localeCompare","length","reverse","handleSort","Object","values","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKKA,E,SAAAA,G,OAAAA,E,sBAAAA,E,gBAAAA,E,YAAAA,E,qBAAAA,E,cAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,UAAAA,E,gBAAAA,C,EAAAA,G,IA0CQC,EAAgB,WAC3B,MACIC,mBAA2C,MAD/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGA,EACIF,oBAAoC,GADxC,mBAAOG,EAAP,KAAmBC,EAAnB,KAGMC,EA/BW,SAACC,EAA0BC,GAC5C,IAAMC,EAAa,YAAOF,GAoB1B,OAlBAE,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQJ,EAAQN,YACd,IAAK,iBACH,OAAOS,EAAEE,cAAcD,GAEzB,IAAK,SAEH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,EAEZ,IAEGN,EAAQJ,YACVK,EAAcM,UAGTN,CACR,CASsBO,CAAWC,OAAOC,OAAOnB,GAAkB,CAC9DG,WAAYA,GAAc,iBAC1BE,eAGF,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAmC,mBAAfjB,EAAkC,GAAK,YACpEmB,QAAS,kBAAMlB,EAAc,iBAApB,EAHX,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAsC,WAAfjB,EAA0B,GAAK,YAC/DmB,QAAS,kBAAMlB,EAAc,SAApB,EAHX,4BAQA,wBACEiB,KAAK,SACLD,UAAWG,IAAG,SAAU,aAAc,CAAE,YAAalB,IACrDiB,QAAS,kBAAMhB,GAAc,EAApB,EAHX,qBAQCH,GAAcE,EACb,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPlB,EAAc,MACdE,GAAc,EACf,EANH,mBAUE,QAGN,6BACGC,EAAaiB,KAAI,SAACC,GAAD,OAChB,6BAAgBA,GAAPA,EADO,QAMzB,ECxGDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.394bc6a8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nenum GoodsFromServer {\n  Dumplings = 'Dumplings',\n  Carrot = 'Carrot',\n  Eggs = 'Eggs',\n  IceCream = 'Ice cream',\n  Apple = 'Apple',\n  Bread = 'Bread',\n  Fish = 'Fish',\n  Honey = 'Honey',\n  Jam = 'Jam',\n  Garlic = 'Garlic',\n}\n\ninterface SortOptions {\n  activeSort: 'alphabetically' | 'length' | 'reset';\n  isReversed: boolean;\n}\n\nconst handleSort = (goods: GoodsFromServer[], options: SortOptions) => {\n  const preparedGoods = [...goods];\n\n  preparedGoods.sort((a, b) => {\n    switch (options.activeSort) {\n      case 'alphabetically':\n        return a.localeCompare(b);\n\n      case 'length':\n\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (options.isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [activeSort, setActiveSort]\n    = useState<SortOptions['activeSort'] | null>(null);\n\n  const [isReversed, setIsReversed]\n    = useState<SortOptions['isReversed']>(false);\n\n  const visibleGoods = handleSort(Object.values(GoodsFromServer), {\n    activeSort: activeSort || 'alphabetically',\n    isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${activeSort === 'alphabetically' ? '' : 'is-light'}`}\n          onClick={() => setActiveSort('alphabetically')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${activeSort === 'length' ? '' : 'is-light'}`}\n          onClick={() => setActiveSort('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(true)}\n        >\n          Reverse\n        </button>\n\n        {activeSort || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setActiveSort(null);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}